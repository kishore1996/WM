/*Copyright (c) 2019-2020 imaginea.com All Rights Reserved.
 This software is the confidential and proprietary information of imaginea.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with imaginea.com*/
package com.readthefile.sqrfiles;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * Fileinfo generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`fileinfo`")
public class Fileinfo implements Serializable {

    private Integer id;
    private String filename;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] filecontent;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`filename`", nullable = true, length = 255)
    public String getFilename() {
        return this.filename;
    }

    public void setFilename(String filename) {
        this.filename = filename;
    }

    @Column(name = "`filecontent`", nullable = true)
    public byte[] getFilecontent() {
        return this.filecontent;
    }

    public void setFilecontent(byte[] filecontent) {
        this.filecontent = filecontent;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Fileinfo)) return false;
        final Fileinfo fileinfo = (Fileinfo) o;
        return Objects.equals(getId(), fileinfo.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}